name: Deploy to GitHub Pages

on:
  # mainブランチにプッシュされた時 (PRのマージを含む) にトリガー
  push:
    branches:
      - main

# 同時実行制御: mainブランチごとに1つのデプロイのみ実行
concurrency:
  group: 'pages'
  cancel-in-progress: true

# GITHUB_TOKEN の権限を設定
permissions:
  contents: read # actions/checkout に必要
  pages: write # actions/deploy-pages に必要
  id-token: write # actions/deploy-pages に必要 (OIDC認証用)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # プロジェクトで使用しているNode.jsのバージョンに合わせてください
          cache: 'npm' # npmのキャッシュを有効化

      - name: Install dependencies
        run: npm ci # package-lock.json に基づいて依存関係をインストール

      - name: Build Svelte app
        run: npm run build # Svelteアプリをビルド (出力先: build ディレクトリ)
        # env: BASE_PATH は削除し、svelte.config.js の paths.base に依存させる

      - name: Setup Pages
        uses: actions/configure-pages@v5
        # このステップは actions/deploy-pages を使う場合に推奨されます

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # ビルド出力ディレクトリを指定
          path: './build'

  deploy:
    needs: build # build ジョブの完了後に実行
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # デプロイされたページのURLを出力
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # artifact は upload-pages-artifact によって自動的に取得される
