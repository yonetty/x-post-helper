# .github/workflows/notify-rejected.yml
name: Notify PR Rejection

on:
  pull_request:
    types: [closed] # PRがクローズされた時にトリガー

jobs:
  notify_rejection:
    # PRがマージされずにクローズされ、かつターゲットブランチが main で、
    # かつヘッドブランチ名が 'event/' で始まる場合のみ実行
    if: github.event.pull_request.merged == false && github.base_ref == 'main' && startsWith(github.head_ref, 'event/')
    runs-on: ubuntu-latest
    steps:
      - name: Extract eventId from branch name
        id: extract_event_id
        # ブランチ名 'event/EVENT_ID' から 'EVENT_ID' 部分を抽出
        run: echo "EVENT_ID=$(echo ${{ github.head_ref }} | sed 's/^event\\///')" >> $GITHUB_OUTPUT

      - name: Call rejection endpoint
        env:
          # Vercelデプロイ先のURLをSecretsに設定してください
          REJECT_ENDPOINT_URL: ${{ secrets.REJECT_ENDPOINT_URL }}
          EVENT_ID: ${{ steps.extract_event_id.outputs.EVENT_ID }}
        run: |
          echo "Calling rejection endpoint for eventId: $EVENT_ID"
          response=$(curl -s -w "%{http_code}" -X POST "$REJECT_ENDPOINT_URL" \
               -H "Content-Type: application/json" \
               -d "{\"eventId\": \"$EVENT_ID\"}")

          http_code=$(echo "$response" | tail -n1) # HTTPステータスコードを取得
          body=$(echo "$response" | sed '$d') # レスポンスボディを取得

          echo "Response Body: $body"
          echo "HTTP Status Code: $http_code"

          if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 300 ]; then
            echo "Rejection notification sent successfully for eventId: $EVENT_ID"
          elif [ "$http_code" == "404" ]; then
             # 404 (Not Found) は、該当イベントがないか、既に承認済みでない場合など。ワークフローとしてはエラー扱いにしない
             echo "Event not found or rejection is not applicable for eventId: $EVENT_ID. No action needed."
          else
            echo "::error::Failed to send rejection notification for eventId: $EVENT_ID. Status code: $http_code"
            exit 1 # 失敗としてワークフローを終了
          fi
